on:
  push:
    branches-ignore:
    - main
    paths:
    - .github/workflows/mb-rg-mechbaycom-landingzone.yml
    - .azure/**/*.bicep
  pull_request:
    branches:
    - main    
    paths:
    - .github/workflows/mb-rg-mechbaycom-landingzone.yml
    - .azure/**/*.bicep
  workflow_dispatch:
    inputs:
      dev:
        description: 'dev to run'     
        required: true
        default: 'development'
      mode:
        description: 'Running mode'  

env:
  API_NAME: 'api-mechbaycom-dev-001'
  APPINSIGHTS_NAME: 'appi-mechbaycom-dev-001'
  ARM_PATH: './.azure'
  AZURE_RG_dev: 'Development'
  AZURE_RG_LOCATION: 'westus2'
  AZURE_RG_NAME: 'mb-rg-mechbaycom-dev-001'
  KEYVAULT_NAME: 'kv-mechbaycom-dev-001'
  PLAN_NAME: 'plan-shared-online-dev-001'
  SHARED_RG_NAME: 'mb-rg-shared-online-dev-001'
  STORAGE_NAME: 'stmechbaycomdev001'
  WORKSPACE_NAME: 'work-shared-online-dev-001'  

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:  
  development_Stage_deploy_landing_zone:
    name: 'Deploy landing zone IaC'
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # shared RG
      - name: Create ${{ env.SHARED_RG_NAME }}
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: az group create -n ${{ env.SHARED_RG_NAME }} -l ${{ env.AZURE_RG_LOCATION }}

      # work-shared-online-dev-001
      - name: Deploy ${{ env.KEYVAULT_NAME }}
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.SHARED_RG_NAME }}
          template: ${{ env.ARM_PATH }}/work-loganalyticsworkspace.bicep
          parameters: name=${{ env.WORKSPACE_NAME }}

      # landing zone RG
      - name: Create ${{ env.AZURE_RG_NAME }}
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: az group create -n ${{ env.AZURE_RG_NAME }} -l ${{ env.AZURE_RG_LOCATION }}

      # stmechbaycomdev001
      - name: Deploy ${{ env.STORAGE_NAME }}
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.AZURE_RG_NAME }}
          template: ${{ env.ARM_PATH }}/st-storageaccount.bicep
          parameters: name=${{ env.STORAGE_NAME }}

      # stmechbaycomdev001
      - name: Deploy ${{ env.STORAGE_NAME }}
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.AZURE_RG_NAME }}
          template: ${{ env.ARM_PATH }}/st-storageaccount.bicep
          parameters: name=${{ env.STORAGE_NAME }}

      # kv-mechbaycom-dev-001
      - name: Deploy ${{ env.KEYVAULT_NAME }}
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.AZURE_RG_NAME }}
          template: ${{ env.ARM_PATH }}/kv-keyvault.bicep
          parameters: name=${{ env.KEYVAULT_NAME }}

      # appi-mechbaycom-dev-001
      - name: Deploy ${{ env.APPINSIGHTS_NAME }}
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.AZURE_RG_NAME }}
          template: ${{ env.ARM_PATH }}/appi-applicationinsights.bicep
          parameters: name=${{ env.APPINSIGHTS_NAME }} workName=${{ env.WORKSPACE_NAME }} workResourceGroupName=${{ env.SHARED_RG_NAME }}

      # api-mechbaycom-dev-001
      - name: Deploy ${{ env.API_NAME }}
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.AZURE_RG_NAME }}
          template: ${{ env.ARM_PATH }}/api-apiapp.bicep
          parameters: name=${{ env.API_NAME }} planName=${{ env.PLAN_NAME }} planResourceGroupName=${{ env.SHARED_RG_NAME }} appiKey=${{ secrets.APPI_KEY }} appiConnection=${{ secrets.APPI_CONNECTION }} rgdev=${{ env.AZURE_RG_dev }}